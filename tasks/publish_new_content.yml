---
- name: "publish_new_content | Publish new content view (Dev/Lib)"
  failed_when: false
  loop: "{{ sat6_content_views }}"
  loop_control:
    pause: 30
  register: pub_output
  redhat.satellite.content_view_version:
    server_url: "{{ satellite_server_url }}"
    validate_certs: false
    username: "{{ satellite_username }}"
    password: "{{ satellite_password }}"  
    content_view: "{{ item }}"
    organization: "{{ satellite_organization }}"
    lifecycle_environments:
      - Library
      - Development
    force_promote: true
  tags: dev

- name: "publish_new_content | Promote Test content view (Test)"
  failed_when: false
  loop: "{{ sat6_content_views }}"
  loop_control:
    pause: 30
  register: pub_output
  redhat.satellite.content_view_version:
    server_url: "{{ satellite_server_url }}"
    validate_certs: false
    username: "{{ satellite_username }}"
    password: "{{ satellite_password }}"  
    content_view: "{{ item }}"
    organization: "{{ satellite_organization }}"
    current_lifecycle_environment: "Development"
    lifecycle_environments:
      - Test
    force_promote: true
  tags: test

- name: "publish_new_content | Promote Production content view (Prod)"
  failed_when: false
  loop: "{{ sat6_content_views }}"
  loop_control:
    pause: 30
  register: pub_output
  redhat.satellite.content_view_version:
    server_url: "{{ satellite_server_url }}"
    validate_certs: false
    username: "{{ satellite_username }}"
    password: "{{ satellite_password }}"  
    content_view: "{{ item }}"
    organization: "{{ satellite_organization }}"
    current_lifecycle_environment: "Test"
    lifecycle_environments:
      - Production
    force_promote: true
  tags: prod

- name: "publish_new_content | Publish new content view for capsules"
  failed_when: false
  register: pub_output_capsules  
  redhat.satellite.content_view_version:
    server_url: "{{ satellite_server_url }}"
    validate_certs: false
    username: "{{ satellite_username }}"
    password: "{{ satellite_password }}"
    content_view: "cv_capsules"
    organization: "hybrid_cloud"
    lifecycle_environments:
      - Library
  tags: test

- name: "publish_new_content | Slack message body"
  ansible.builtin.set_fact:
    slack_message: |
      {% for result in pub_output.results %}
      :dot: *{{ result.entity.content_view_versions[0].name | default(result.item) }}* - {{ ':large_green_circle: Success' if result.changed else ':red_circle: Failed' }}
      {% if not result.changed %}
          :file: - Msg: {{ result.msg | default('') }}
          {% if result.error is defined %}
            ```{{ result.error.displayMessage | default('') }}```
          {% endif %}
      {% endif %}
      {% endfor %}
    slack_message_capsules: "{% if pub_output_capsules is defined %}cv_capsules - {{ ':red_circle: Failed' if pub_output_capsules.failed else ':large_green_circle: Success' }}{% endif %}"
  tags:
    - dev
    - test
    - prod

- name: "publish_new_content | Send message at slack"
  when: slack_token is defined
  community.general.slack:
    token: "{{ slack_token }}"
    msg: "*:ansiblered: Publishing {{ ansible_run_tags[0] | capitalize }} content_view :satellite:*\n{{ slack_message }}\n{{ slack_message_capsules | default('') }}"
  tags:
    - dev
    - test
    - prod
